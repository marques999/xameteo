<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ASTRO_MOONRISE" xml:space="preserve">
    <value>Moonrise</value>
  </data>
  <data name="ASTRO_MOONSET" xml:space="preserve">
    <value>Moonset</value>
  </data>
  <data name="ASTRO_SUNRISE" xml:space="preserve">
    <value>Sunrise</value>
  </data>
  <data name="ASTRO_SUNSET" xml:space="preserve">
    <value>Sunset</value>
  </data>
  <data name="BUTTON_DEFAULT" xml:space="preserve">
    <value>Click here!</value>
  </data>
  <data name="CONDITION_1000" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="CONDITION_1003" xml:space="preserve">
    <value>Partly Cloudy</value>
  </data>
  <data name="CONDITION_1006" xml:space="preserve">
    <value>Cloudy</value>
  </data>
  <data name="CONDITION_1009" xml:space="preserve">
    <value>Overcast</value>
  </data>
  <data name="CONDITION_1030" xml:space="preserve">
    <value>Mist</value>
  </data>
  <data name="CONDITION_1063" xml:space="preserve">
    <value>Patchy rain nearby</value>
  </data>
  <data name="CONDITION_1066" xml:space="preserve">
    <value>Patchy snow nearby</value>
  </data>
  <data name="CONDITION_1069" xml:space="preserve">
    <value>Patchy sleet nearby</value>
  </data>
  <data name="CONDITION_1072" xml:space="preserve">
    <value>Patchy freezing drizzle nearby</value>
  </data>
  <data name="CONDITION_1087" xml:space="preserve">
    <value>Thundery outbreaks in nearby</value>
  </data>
  <data name="CONDITION_1114" xml:space="preserve">
    <value>Blowing snow</value>
  </data>
  <data name="CONDITION_1117" xml:space="preserve">
    <value>Blizzard</value>
  </data>
  <data name="CONDITION_1135" xml:space="preserve">
    <value>Fog</value>
  </data>
  <data name="CONDITION_1147" xml:space="preserve">
    <value>Freezing fog</value>
  </data>
  <data name="CONDITION_1150" xml:space="preserve">
    <value>Patchy light drizzle</value>
  </data>
  <data name="CONDITION_1153" xml:space="preserve">
    <value>Light drizzle</value>
  </data>
  <data name="CONDITION_1168" xml:space="preserve">
    <value>Freezing drizzle</value>
  </data>
  <data name="CONDITION_1171" xml:space="preserve">
    <value>Heavy freezing drizzle</value>
  </data>
  <data name="CONDITION_1180" xml:space="preserve">
    <value>Patchy light rain</value>
  </data>
  <data name="CONDITION_1183" xml:space="preserve">
    <value>Light rain</value>
  </data>
  <data name="CONDITION_1186" xml:space="preserve">
    <value>Moderate rain at times</value>
  </data>
  <data name="CONDITION_1189" xml:space="preserve">
    <value>Moderate rain</value>
  </data>
  <data name="CONDITION_1192" xml:space="preserve">
    <value>Heavy rain at times</value>
  </data>
  <data name="CONDITION_1195" xml:space="preserve">
    <value>Heavy rain</value>
  </data>
  <data name="CONDITION_1198" xml:space="preserve">
    <value>Light freezing rain</value>
  </data>
  <data name="CONDITION_1201" xml:space="preserve">
    <value>Moderate or heavy freezing rain</value>
  </data>
  <data name="CONDITION_1204" xml:space="preserve">
    <value>Light sleet</value>
  </data>
  <data name="CONDITION_1207" xml:space="preserve">
    <value>Moderate or heavy sleet</value>
  </data>
  <data name="CONDITION_1210" xml:space="preserve">
    <value>Patchy light snow</value>
  </data>
  <data name="CONDITION_1213" xml:space="preserve">
    <value>Light snow</value>
  </data>
  <data name="CONDITION_1216" xml:space="preserve">
    <value>Patchy moderate snow</value>
  </data>
  <data name="CONDITION_1219" xml:space="preserve">
    <value>Moderate snow</value>
  </data>
  <data name="CONDITION_1222" xml:space="preserve">
    <value>Patchy heavy snow</value>
  </data>
  <data name="CONDITION_1225" xml:space="preserve">
    <value>Heavy snow</value>
  </data>
  <data name="CONDITION_1237" xml:space="preserve">
    <value>Ice pellets</value>
  </data>
  <data name="CONDITION_1240" xml:space="preserve">
    <value>Light rain shower</value>
  </data>
  <data name="CONDITION_1243" xml:space="preserve">
    <value>Moderate or heavy rain shower</value>
  </data>
  <data name="CONDITION_1246" xml:space="preserve">
    <value>Torrential rain shower</value>
  </data>
  <data name="CONDITION_1249" xml:space="preserve">
    <value>Light sleet showers</value>
  </data>
  <data name="CONDITION_1252" xml:space="preserve">
    <value>Moderate or heavy sleet showers</value>
  </data>
  <data name="CONDITION_1255" xml:space="preserve">
    <value>Light snow showers</value>
  </data>
  <data name="CONDITION_1258" xml:space="preserve">
    <value>Moderate or heavy snow showers</value>
  </data>
  <data name="CONDITION_1261" xml:space="preserve">
    <value>Light showers of ice pellets</value>
  </data>
  <data name="CONDITION_1264" xml:space="preserve">
    <value>Moderate or heavy showers of ice pellets</value>
  </data>
  <data name="CONDITION_1273" xml:space="preserve">
    <value>Patchy light rain in area with thunder</value>
  </data>
  <data name="CONDITION_1276" xml:space="preserve">
    <value>Moderate or heavy rain in area with thunder</value>
  </data>
  <data name="CONDITION_1279" xml:space="preserve">
    <value>Patchy light snow in area with thunder</value>
  </data>
  <data name="CONDITION_1282" xml:space="preserve">
    <value>Moderate or heavy snow in area with thunder</value>
  </data>
  <data name="Forecast_Cloud" xml:space="preserve">
    <value>Cloud coverage</value>
  </data>
  <data name="Forecast_Condition" xml:space="preserve">
    <value>Condition</value>
  </data>
  <data name="Forecast_Feels_Like" xml:space="preserve">
    <value>Feels Like</value>
  </data>
  <data name="Forecast_Humidity" xml:space="preserve">
    <value>Humidity</value>
  </data>
  <data name="Forecast_Is_Day" xml:space="preserve">
    <value>Daytime</value>
  </data>
  <data name="Forecast_Last_Updated" xml:space="preserve">
    <value>Last updated</value>
  </data>
  <data name="Forecast_Precipitation" xml:space="preserve">
    <value>Precipitation</value>
  </data>
  <data name="Forecast_Pressure" xml:space="preserve">
    <value>Pressure</value>
  </data>
  <data name="Forecast_Temperature" xml:space="preserve">
    <value>Temperature</value>
  </data>
  <data name="Forecast_Visibility" xml:space="preserve">
    <value>Visibility</value>
  </data>
  <data name="Forecast_Wind_Degree" xml:space="preserve">
    <value>Wind degree</value>
  </data>
  <data name="Forecast_Wind_Direction" xml:space="preserve">
    <value>Wind direction</value>
  </data>
  <data name="Forecast_Wind_Velocity" xml:space="preserve">
    <value>Wind velocity</value>
  </data>
  <data name="Location_Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Location_Latitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="Location_Local_Time" xml:space="preserve">
    <value>Local time</value>
  </data>
  <data name="Location_Longitude" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="Location_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Location_Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="Location_Timezone" xml:space="preserve">
    <value>Time zone</value>
  </data>
  <data name="Units_Atmosphere" xml:space="preserve">
    <value>Atmosphere</value>
  </data>
  <data name="Units_Celsius" xml:space="preserve">
    <value>Celsius</value>
  </data>
  <data name="Units_Centimeters" xml:space="preserve">
    <value>Centimeters</value>
  </data>
  <data name="Units_Fahrenheit" xml:space="preserve">
    <value>Fahrenheit</value>
  </data>
  <data name="Units_Inches" xml:space="preserve">
    <value>Inches</value>
  </data>
  <data name="Units_Kelvin" xml:space="preserve">
    <value>Kelvin</value>
  </data>
  <data name="Units_Kilometers" xml:space="preserve">
    <value>Kilometers</value>
  </data>
  <data name="Units_Kilometers_Hour" xml:space="preserve">
    <value>Kilometers per hour</value>
  </data>
  <data name="Units_Kilopascal" xml:space="preserve">
    <value>Kilopascal</value>
  </data>
  <data name="Units_Knots" xml:space="preserve">
    <value>Knots</value>
  </data>
  <data name="Units_Meters" xml:space="preserve">
    <value>Meters</value>
  </data>
  <data name="Units_Meters_Second" xml:space="preserve">
    <value>Meters per second</value>
  </data>
  <data name="Units_Miles" xml:space="preserve">
    <value>Miles</value>
  </data>
  <data name="Units_Miles_Hour" xml:space="preserve">
    <value>Miles per hour</value>
  </data>
  <data name="Units_Millibars" xml:space="preserve">
    <value>Millibars</value>
  </data>
  <data name="Units_Millimeters" xml:space="preserve">
    <value>Milimeters</value>
  </data>
  <data name="Units_Torr" xml:space="preserve">
    <value>Torr (mmHg)</value>
  </data>
</root>